" ----------------Vundle---------------- "
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=$HOME/.vim/bundle/Vundle.vim

" Vundle plugins
call vundle#begin() " Where Vundle installs plugins

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" Shows a git diff in the 'gutter' (sign column)
Plugin 'airblade/vim-gitgutter'

" A Git wrapper so awesome, it should be illega
Plugin 'tpope/vim-fugitive'

" Status/tabline for vim.
Plugin 'vim-airline/vim-airline'

" One Dark Theme
Plugin 'joshdick/onedark.vim'

call vundle#end()            " required
filetype plugin indent on    " required

" ----------------Vim Settings---------------- "
" Set the <Leader> Variable. The default is '\'.
let mapleader = ','

" Make use of spaces when using tab, but still backpace spaces as tabs.
set tabstop=4 softtabstop=0 expandtab shiftwidth=4 smarttab

"Make backspace behave like other editors
set backspace=indent,eol,start

" ----------------Spell checking---------------- "
" Enable spell check
nmap <silent> <Leader>esc :set spell spelllang=en_gb <bar> set nocursorline<cr>

" Disable spell check
nmap <silent> <Leader>dsc :set nospell <bar> set cursorline<cr>

" ----------------Vim Visuals---------------- "
if isdirectory(expand('~/.vim/bundle/onedark.vim/'))
    let g:onedark_color_overrides = {
        \ "background": {"gui": "NONE", "cterm": "NONE", "cterm16": "NONE" },
    \}
    colorscheme onedark
endif

syntax enable       " Syntax highlighting
set number          " Shows line line numbers in the buffer.

" ----------------Vim Mappings---------------- "
" Esc in insert mode.
:inoremap jj <Esc>

" Buffers
nnoremap <Leader>b :buffers<CR>:buffer<Space>

" Splits
set splitbelow splitright

" Remap splits navigation to just CTRL+hjkl
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Make adjusing split sizes a bit more friendly
noremap <silent> <C-Left> :vertical resize +3<CR>
noremap <silent> <C-Right> :vertical resize -3<CR>
noremap <silent> <C-Up> :resize +3<CR>
noremap <silent> <C-Down> :resize -3<CR>

" ----------------Airline Settings---------------- "
"  Some nice upgrades for the standard status bar.
set noshowmode                                          " Let Airline handle the mode visuals.

let g:airline#extensions#tabline#enabled = 1            " Enables the tab line, to see tabs and buffers at the top.
let g:airline#extensions#tabline#show_tabs = 1          " Displaying tabs, regardless of number.
let g:airline#extensions#tabline#show_close_button = 0  " Configure whether close button should be shown.

let g:airline#extensions#tabline#buffer_idx_mode = 0    " Displaying index of the buffer.
nmap <leader>1 <Plug>AirlineSelectTab1
nmap <leader>2 <Plug>AirlineSelectTab2
nmap <leader>3 <Plug>AirlineSelectTab3
nmap <leader>4 <Plug>AirlineSelectTab4
nmap <leader>5 <Plug>AirlineSelectTab5
nmap <leader>6 <Plug>AirlineSelectTab6
nmap <leader>7 <Plug>AirlineSelectTab7
nmap <leader>8 <Plug>AirlineSelectTab8
nmap <leader>9 <Plug>AirlineSelectTab9
nmap <leader>- <Plug>AirlineSelectPrevTab
nmap <leader>+ <Plug>AirlineSelectNextTab

" -----------------Search----------------- "

set hlsearch	" Enable search highlighting.
set incsearch	" Start highlighting first occurrence of match as typing happens
set ignorecase	" Ignore case in vim search.


"Remove search highlighting, default is to remain highlighted until new search is performed.
nmap <silent> <Leader><space> :nohlsearch<cr>

" Sets search to be case sensitive
nmap <Leader>sc :set noignorecase<cr>
